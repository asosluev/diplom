apiVersion: v1
kind: Service
metadata:
  name: nginx-loadbalancer
  namespace: default
  labels:
    app: nginx-loadbalancer
spec:
  ports:
  - port: 80
    protocol: TCP
    name: http
    targetPort: 80
  type: LoadBalancer
  selector:
    app: nginx-loadbalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    user nginx;
    worker_processes 1;
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;
    events {
      worker_connections  10240;
    }
    http {
        # include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
        access_log  /var/log/nginx/access.log  main;
        sendfile        on;
        #tcp_nopush     on;
        keepalive_timeout  65;
        #gzip  on;
        include /etc/nginx/conf.d/*.conf;
    }
  default.conf: |
    upstream app {
      server nginx-v1:80;
      server nginx-v2:80;
      keepalive 1024;
    }
    server {
        listen       80;
        server_name  localhost;
        location / {
          proxy_pass http://app/;
          proxy_http_version 1.1;
            # root   /usr/share/nginx/html;
            # index  index.html index.htm;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-loadbalancer-deployment
  namespace: default
spec:
  selector:
    matchLabels:
      app: nginx-loadbalancer
  replicas: 2 # tells deployment to run 2 pods
  template:
    metadata:
      labels:
        app: nginx-loadbalancer
    spec:
      containers:
      - name: nginx-loadbalancer
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx # mount nginx-conf volumn to /etc/nginx
          readOnly: true
          name: nginx-conf
        - mountPath: /var/log/nginx
          name: log
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf # place ConfigMap `nginx-conf` on /etc/nginx
          items:
            - key: nginx.conf
              path: nginx.conf
            - key: default.conf
              path: conf.d/default.conf # dig directory
      - name: log
        emptyDir: {}